#include <stdio.h>
#include <stdlib.h>

struct noArvovre{
  char Raiz;
  struct noArvovre* esq;
  struct noArvovre* dir;
};


typedef struct noArvovre no;

no* criar_no(char Raiz,no* esq, no* dir){
	no* n = malloc(sizeof(no ));
	n -> Raiz = Raiz;
	n -> esq = esq;
	n -> dir = dir;
return n;
}


int maior(int a, int b){
    if(a > b)
        return a;
    else
        return b;
}


int altura(no* nono){
   if((nono == NULL) || (nono->esq == NULL && nono->dir == NULL))
       return 0;
   else
       return 1 + maior(altura(nono->esq), altura(nono->dir));
       
}

int maiorR(int Nozes, int b){
    if(Nozes > b)
        return Nozes;
    else
        return b;
}


int alturar(no* nono){
   if((nono == NULL) || (nono->esq == NULL && nono->dir == NULL))
       return 0;
   else
       return  maiorR(alturar(nono->esq), altura(nono->dir));
       
}

char buscaValor(no* n, char valor){
	if(n == NULL){
		return 0;
	}else{
		return(n->Raiz == valor) || (buscaValor(n->esq,valor)) || (buscaValor(n->dir, valor));
	}
}


void main(){
	no* nono = criar_no('D',criar_no(('B'),criar_no(('A'),NULL,NULL),criar_no(('C'),NULL,NULL)), criar_no(('F'),criar_no('E',NULL,NULL),criar_no('G',NULL,NULL)));
    char Nozes = "D";
    printf(" Altura da Arvore: %d", altura(nono));
    //printf(" Altura do no: %d", alturar(nono));
     printf(" Altura do no: %d", alturar(nono));
        

}
